server:
  port: 80
  max-http-header-size: 8192

spring:
  profiles:
    active: dev
  thymeleaf:
    cache: false
  # datasource config
  datasource:
    name: my-blog-datasource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://132.232.115.11:3306/my_blog_db?useUnicode=true&characterEncoding=utf8&autoReconnect=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: shen853323110.
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 3000
      pool-name: hikariCP
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
  # redis config
  redis:
    host: 132.232.115.11
    password: 123456
    port: 6379
    timeout: 10000
    database: 0
    lettuce:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 10
        min-idle: 0

# mybatis config
mybatis:
  # 当mybatis的xml文件和mapper接口不在相同包下时
  # 需要用mapperLocations属性指定xml文件的路径。
  # *是个通配符，代表所有的文件，**代表所有目录下
  mapper-locations: classpath:mapper/*Mapper.xml
  # 指定bean所在包
  # 在mapper.xml中可以使用别名而不使用类的全路径名
  type-aliases-package: com.site.blog.my.core.entity
  # spring boot集成mybatis的方式打印sql
#  configuration:
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

# 打印sql(这个方式和上面那个打印sql的效果是一样的，但是这个可以指定包下的sql打印，所以我们这里用这个)
logging:
  level:
    com.site.blog.my.core.dao: debug

#pagehelper分页插件
pagehelper:
  # 指定数据库，不指定的话会默认自动检测数据库类型
  helper-dialect: mysql
  # 是否启用分页合理化。如果启用，当pagenum<1时，会自动查询第一页的数据，当pagenum>pages时，自动查询最后一页数据；不启用的，以上两种情况都会返回空数据
  reasonable: true
  # 用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值， 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=countSql
  # 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。（copy来的，因为我也不知道怎么去解释）
  support-methods-arguments: true

